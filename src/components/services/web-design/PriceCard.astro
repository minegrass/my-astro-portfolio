---
interface Props {
  title: string;
  description: string;
  oriPrice: number;
  price: number;
  features: string[];
}

const { title, description, price, features, oriPrice } = Astro.props;
---

<div class="flex flex-col md:flex-row drop-shadow-lg swipe-in-animation">
  <!-- first section -->
  <div
    class="flex flex-col items-center justify-center p-3 bg-web-foreground backdrop-blur-sm bg-opacity-60 rounded-t-xl md:rounded-tr-none md:rounded-l-xl w-2/3"
  >
    <h1 class="text-xl font-bold">{title}</h1>
    <p class="text-3xl font-extrabold">RM {price}</p>
    <p class="line-through text-web-copy-lighter">RM {oriPrice}</p>
  </div>
  <!-- middle -->
  <div
    class="flex flex-col items-center justify-center p-3 bg-web-foreground backdrop-blur-sm bg-opacity-30 text-web-copy-light w-full"
  >
    <div>
      <p>{description}</p>
    </div>
    <div class="list-none grid grid-cols-2 grid-rows-2">
      {features.map((feature) => <li>{feature}</li>)}
    </div>
  </div>
  <!-- back -->
  <div
    class="flex flex-col items-center justify-center p-3 bg-web-foreground backdrop-blur-sm bg-opacity-30 text-web-copy-light"
  >
    <a
      class="bg-web-secondary text-web-secondary-content p-2 px-4 text-2xl font-bold rounded-full hover:bg-web-secondary-light"
      href="./price">Details</a
    >
  </div>
</div>

<script>
  import gsap from "gsap";
  gsap.from(".swipe-in-animation", {
    scrollTrigger: {
      trigger: "#price-section",
      start: "top center",
      end: "center center",
      scrub: true,
    },
    x: 200,
    opacity: 0,

    stagger: 0.5,
  });
</script>
