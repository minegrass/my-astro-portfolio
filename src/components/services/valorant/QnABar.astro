---
interface Props {
    question: string;
    answer: string;
    id: string;
}

const { question, answer, id } = Astro.props;
---

<div class="bg-gray-800 hover:bg-gray-700 rounded-xl">
    <input type="checkbox" name="detail-one" id={id} />
    <details open>
        <summary>
            <label for={id} class="text-3xl font-bold px-5"
                >Click to open and close smoothly with pure CSS</label
            >
        </summary>
        <div class="content">
            <p class="m-2 text-xl">
                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Vero,
                maxime modi error facilis quidem dolores temporibus consequuntur
                aut ratione aperiam!
            </p>
        </div>
    </details>
</div>

<style>
    details {
        box-sizing: border-box;
        margin-top: 5px;
        transition: max-height 200ms ease-out;
        max-height: 4rem; /* Set a max-height value just enough to show the summary content */
        overflow: hidden; /* Hide the rest of the content */
    }

    summary {
        display: block; /* This hides the summary's ::marker pseudo-element */
    }

    input {
        display: none; /* Hide the checkbox element */
    }

    /* <label> element to check the checkbox */
    label {
        position: relative;
        display: flex;
        align-items: center;
        padding-left: 1rem;

        height: 4rem; /* This height value must be equal to max-height value of <details> element  */
    }

    label:hover {
        cursor: pointer;
    }

    label::before {
        content: "‚èµ";
        font-size: 1.5rem;
        height: 4rem;
        display: flex;
        align-items: center;
        margin-right: 0.5rem;
        transition: rotate 200ms 400ms ease-out;
    }

    div.content {
        padding: 0 10px;
    }

    /* Here you can choose two approaches to animate <details> element:
        1) Use adjacent sibling combinator (+)
        2) Use :has() pseudo-class, but this might not work in Firefox.
      */

    input:checked + details,
    details:has(input:checked) {
        max-height: 8em; /* Set a max-height value enough to show all the content */
    }

    input:checked + details label::before,
    details:has(input:checked) label::before {
        rotate: 90deg;
        transition: rotate 200ms ease-out;
    }
</style>
